{"version":3,"sources":["components/Introduction.js","components/About.js","components/Skillz.js","components/Contact.js","App.js","registerServiceWorker.js","index.js"],"names":["Introduction","style","zIndex","color","background","className","display","src","process","alt","height","width","borderRadius","marginTop","marginBottom","padding","React","Component","About","fontSize","href","App","id","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"gTAGqBA,E,iLAEjB,OACE,yBAAKC,MAAO,CAAEC,OAAQ,EAAGC,MAAO,QAASC,WAAY,WAAaC,UAAU,eAC1E,qDACA,yBAAKJ,MAAO,CAACK,QAAS,SACpB,yBAAKC,IAAG,UAAKC,MAAL,WAAsCC,IAAI,qCAAqCC,OAAO,MAAMC,MAAM,MAAMV,MAAO,CAAEW,aAAc,OACvI,yBAAKX,MAAO,CAACY,UAAW,OAAQC,aAAc,OAAQC,QAAQ,MAC5D,sDACA,uEACA,yE,GAV8BC,IAAMC,WCA3BC,E,iLAEjB,OACE,yBAAKjB,MAAO,CAAEG,WAAY,WAAaC,UAAU,eAC/C,qCACA,yBAAKJ,MAAO,CAAEK,QAAS,SACrB,yBAAKC,IAAG,UAAKC,MAAL,YAAuCC,IAAI,SAASC,OAAO,MAAMC,MAAM,MAAMV,MAAO,CAAEW,aAAc,OAC5G,yBAAKX,MAAO,CAAEY,UAAW,OAAQC,aAAc,OAAQC,QAAS,GAAIJ,MAAO,MACzE,wDAGA,kNAKA,yX,GAhBuBK,IAAMC,WCApBjB,G,uLAEjB,OACE,yBAAKC,MAAO,CAAEG,WAAY,UAAWD,MAAO,WAAaE,UAAU,eACjE,wBAAIJ,MAAO,CAACkB,SAAU,KAAtB,mBACA,uBAAGlB,MAAO,CAACkB,SAAU,GAAIR,MAAO,QAAhC,6P,GALkCK,IAAMC,YCA3BjB,E,iLAEjB,OACE,yBAAKC,MAAO,GAAII,UAAU,eACxB,iEACA,0CACA,6BACE,uBAAGe,KAAK,yDAAR,YADF,YAEE,uBAAGA,KAAK,+CAAR,uC,GARgCJ,IAAMC,WCyBjCI,EArBH,WACV,OACE,yBAAKhB,UAAU,OACb,yBAAKA,UAAU,aACb,6BAASA,UAAU,QAAQiB,GAAG,SAC5B,kBAAC,EAAD,OAEF,6BAASjB,UAAU,QAAQiB,GAAG,SAC5B,kBAAC,EAAD,OAEF,6BAASjB,UAAU,QAAQiB,GAAG,UAC5B,kBAAC,EAAD,OAEF,6BAASjB,UAAU,QAAQiB,GAAG,WAC5B,kBAAC,EAAD,UCXJC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,MCzEjEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBlB,UAAW,CAGzE,GADkB,IAAImB,IAAI1C,MAAwBiB,OAAOC,UAC3CyB,SAAW1B,OAAOC,SAASyB,OAIvC,OAGF1B,OAAO2B,iBAAiB,QAAQ,WAC9B,IAAMtB,EAAK,UAAMtB,MAAN,sBAEPe,IAiDV,SAAiCO,GAE/BuB,MAAMvB,GACHI,MAAK,SAAAoB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C3B,UAAUC,cAAc2B,MAAMzB,MAAK,SAAAC,GACjCA,EAAayB,aAAa1B,MAAK,WAC7BT,OAAOC,SAASmC,eAKpBhC,EAAgBC,MAGnBc,OAAM,WACLF,QAAQC,IACN,oEArEAmB,CAAwBhC,GAIxBC,UAAUC,cAAc2B,MAAMzB,MAAK,WACjCQ,QAAQC,IACN,gHAMJd,EAAgBC,OCzCxBiC,K","file":"static/js/main.fb4939ac.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../App.css';\r\n\r\nexport default class Introduction extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={{ zIndex: 1, color: 'white', background: '#4C5C68' }} className=\"flex canvas\">\r\n        <h1>WOW! It's Me, Zachary</h1>\r\n        <div style={{display: 'flex'}}>\r\n          <img src={`${process.env.PUBLIC_URL}/me.jpg`} alt='trust me, its supposed to be of me' height='512' width='512' style={{ borderRadius: 256 }} />\r\n          <div style={{marginTop: 'auto', marginBottom: 'auto', padding:100}}>\r\n            <h3>Fullstack as my beard.</h3>\r\n            <h3>And by that I mean I prefer JavaScript.</h3>\r\n            <p>But I can do other stuff, trust me.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport '../App.css';\r\n\r\nexport default class About extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={{ background: '#C5C3C6' }} className=\"canvas flex\">\r\n        <h1>About</h1>\r\n        <div style={{ display: 'flex' }}>\r\n          <img src={`${process.env.PUBLIC_URL}/dog.jpg`} alt='my dog' height='384' width='384' style={{ borderRadius: 256 }} />\r\n          <div style={{ marginTop: 'auto', marginBottom: 'auto', padding: 50, width: 400 }}>\r\n            <h3>\r\n              The dog's name is Bodee.\r\n            </h3>\r\n            <p>\r\n              While he has no coding experience, I have multiple years of experience \r\n              in mostly fullstack roles where I have been able to make big brain decisions \r\n              that have had positive results. \r\n            </p>\r\n            <p>\r\n              I have a passion for delivering quality products\r\n              to users that embrace the best practices and strive to break some norms in order to keep users engaged. I also\r\n              have a hatred for spreadsheets being used for everything and it is my life mission to \r\n              create a world where there will never be a single spreadsheet uploaded to the internet again.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport './Skillz.css';\r\n\r\nexport default class Introduction extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={{ background: '#4D4D4D', color: '#1985A1' }} className=\"flex canvas\">\r\n        <h1 style={{fontSize: 32}}>Wow such skillz</h1>\r\n        <p style={{fontSize: 24, width: '60%'}}>\r\n        JavaScript\r\n        •\tPython\r\n        •\tJava\r\n        •\tGo\t•\tReact.js\r\n        •\tRedux\r\n        •\tGraphQL\r\n        •\tApollo\t•\tSQL\r\n        •\tNoSQL\r\n        •\tAzure\r\n        •\tDocker\t•\tNode.js\r\n        •\tExpress.js\r\n        •\tServerless Computing\r\n        •\tProgressive Web Apps\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport '../App.css';\r\n\r\nexport default class Introduction extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={{}} className=\"flex canvas\">\r\n        <h2>If you made it this far good job!</h2>\r\n        <h1>Contact Me</h1>\r\n        <div>\r\n          <a href=\"https://www.linkedin.com/in/zach-mcclendon-46947b105/\">Linkedin</a>&nbsp;-&nbsp;\r\n          <a href=\"https://www.youtube.com/watch?v=GO90tV08-Xg\">A good video for your trouble</a>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Introduction from './components/Introduction';\r\nimport About from './components/About';\r\nimport Skillz from './components/Skillz';\r\nimport Contact from './components/Contact';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <section className=\"child\" id=\"intro\">\r\n          <Introduction />\r\n        </section>\r\n        <section className=\"child\" id=\"about\">\r\n          <About />\r\n        </section>\r\n        <section className=\"child\" id=\"skills\">\r\n          <Skillz />\r\n        </section>\r\n        <section className=\"child\" id=\"contact\">\r\n          <Contact />\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}